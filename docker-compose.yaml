services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      TZ: "Europe/Moscow"
      JDBC_URL: jdbc:postgresql://db:5432/social_network
      OTEL_SERVICE_NAME: social_network
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otel-collector:4317
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: social_network
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpwd
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pguser -d social_network" ]
      interval: 5s
      timeout: 5s
      retries: 5

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.102.1
    volumes:
      - ./docker/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 16686:16686
      - "4317"

  prometheus:
    image: prom/prometheus:v2.52.0
    command: --enable-feature=otlp-write-receiver
    volumes:
      - ./docker/prometheus.yml:/prometheus/prometheus.yml
    ports:
      - "9090:9090"

volumes:
  pgdata:
